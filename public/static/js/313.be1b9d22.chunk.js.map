{"version":3,"file":"static/js/313.be1b9d22.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","Pages/Signup.js","components/util/Input.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import React, { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport ProductsContext from \"../context/products-context\";\r\nimport Input from \"../components/util/Input\";\r\n\r\nconst Signup = () => {\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const authCtx = useContext(ProductsContext);\r\n\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n    if (!fullName) {\r\n      setError(\"Please enter your full name.\");\r\n    }\r\n    if (!email.match(emailRegex)) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n    if (!password) {\r\n      setError(\"Please enter a valid password.\");\r\n      return;\r\n    }\r\n    if (!/[A-Z]/.test(password)) {\r\n      setError(\"Password must contain at least one uppercase letter.\");\r\n      return;\r\n    }\r\n    if (!/[a-z]/.test(password)) {\r\n      setError(\"Password must contain at least one lowercase letter.\");\r\n      return;\r\n    }\r\n    if (!/\\d/.test(password)) {\r\n      setError(\"Password must contain at least one digit.\");\r\n      return;\r\n    }\r\n    if (!/[!@#$%^&*()_+{}[\\]:;<>,.?~\\\\/-]/.test(password)) {\r\n      setError(\"Password must contain at least one special character.\");\r\n      return;\r\n    }\r\n\r\n    const userData = {\r\n      userId: uuidv4(),\r\n      fullName: fullName,\r\n      userEmail: email,\r\n      userPassword: password,\r\n    };\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/signup\",\r\n        userData\r\n      );\r\n      console.log(response.data);\r\n      authCtx.login();\r\n\r\n      if (response.status === 200) {\r\n        setLoading(false);\r\n        localStorage.setItem(\"userId\", response.data.userId);\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        navigate(\"/products\");\r\n      }\r\n    } catch (error) {\r\n      setError(\r\n        error.response.data.error ||\r\n          \"An error occurred during signup. Please try again.\"\r\n      );\r\n      console.error(error);\r\n    }\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-8 p-6 bg-white rounded-md shadow-md\">\r\n      <h2 className=\"text-2xl font-semibold text-gray-800 mb-8\">Signup</h2>\r\n      {error && <p className=\"mb-4 text-red-600\">{error}</p>}\r\n      <form onSubmit={formSubmitHandler}>\r\n        <Input\r\n          text=\"Full name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={fullName}\r\n          onChange={(e) => {\r\n            setFullName(e.target.value);\r\n            setError(\"\");\r\n          }}\r\n        />\r\n        <Input\r\n          text=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n            setError(\"\");\r\n          }}\r\n        />\r\n        <Input\r\n          text=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n            setError(\"\");\r\n          }}\r\n        />\r\n        {loading && (\r\n          <p className=\"my-2 font-semibold text-center\">Loading...</p>\r\n        )}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-500 font-semibold text-white w-full py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:shadow-outline-blue\"\r\n        >\r\n          Signup\r\n        </button>\r\n        <div className=\"mt-4 font-semibold text-center hover:underline\">\r\n          <Link to=\"/auth\">Already have an account? Login</Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\n\r\nconst Input = (props) => {\r\n  const { text = \"\", name, ...inputProps } = props;\r\n  const inputId = `${name}-input`;\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label\r\n        className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n        htmlFor={inputId}\r\n      >\r\n        {text}\r\n      </label>\r\n      <input\r\n        id={inputId}\r\n        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n        {...inputProps}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"names":["randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","arguments","length","undefined","options","buf","native","rnds","random","Signup","fullName","setFullName","useState","email","setEmail","password","setPassword","error","setError","loading","setLoading","navigate","useNavigate","authCtx","useContext","ProductsContext","_jsxs","className","children","_jsx","onSubmit","async","event","preventDefault","match","test","userData","userId","uuidv4","userEmail","userPassword","response","axios","post","console","log","data","login","status","localStorage","setItem","token","Input","text","name","type","value","onChange","e","target","Link","to","props","inputProps","inputId","concat","htmlFor","id"],"sourceRoot":""}